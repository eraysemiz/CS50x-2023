sort1 uses: Bubble Sort

How do you know?: The time complexity of Bubble sort is O(n^2) for worst and
average cases and O(n) if the input array is already sorted. When i ran the given
txt files with 'sort1' the random and reversed txt files completed with similar
execution times however sorted file completed with much shorter execution time that's
how i figured sort1 is using bubble sort.

sort2 uses: Merge Sort

How do you know?: Merge sort is the fastest among selection and bubble sort
and when i ran the given txt files with 'sort2' they completed with the fastest
execution times so I think sort2 is using merge sort

sort3 uses: Selection Sort

How do you know?: Selection sort's time complexity is O(n^2) for all cases
and when i ran the given txt files with 'sort3' they completed with close execution
times
